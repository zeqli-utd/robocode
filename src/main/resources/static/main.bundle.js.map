{"version":3,"sources":["C:/Users/zeqing/git/robocode/src/main/frontend/src/$_gendir lazy","C:/Users/zeqing/git/robocode/src/main/frontend/src/app/app-routing.module.ts","C:/Users/zeqing/git/robocode/src/main/frontend/src/app/app.component.css","C:/Users/zeqing/git/robocode/src/main/frontend/src/app/app.component.html","C:/Users/zeqing/git/robocode/src/main/frontend/src/app/app.component.ts","C:/Users/zeqing/git/robocode/src/main/frontend/src/app/app.module.ts","C:/Users/zeqing/git/robocode/src/main/frontend/src/app/page-not-found/page-not-found.component.css","C:/Users/zeqing/git/robocode/src/main/frontend/src/app/page-not-found/page-not-found.component.html","C:/Users/zeqing/git/robocode/src/main/frontend/src/app/page-not-found/page-not-found.component.ts","C:/Users/zeqing/git/robocode/src/main/frontend/src/app/robocode/battle/battle.component.css","C:/Users/zeqing/git/robocode/src/main/frontend/src/app/robocode/battle/battle.component.html","C:/Users/zeqing/git/robocode/src/main/frontend/src/app/robocode/battle/battle.component.ts","C:/Users/zeqing/git/robocode/src/main/frontend/src/app/robocode/create/create.component.css","C:/Users/zeqing/git/robocode/src/main/frontend/src/app/robocode/create/create.component.html","C:/Users/zeqing/git/robocode/src/main/frontend/src/app/robocode/create/create.component.ts","C:/Users/zeqing/git/robocode/src/main/frontend/src/app/robocode/editor/editor.component.css","C:/Users/zeqing/git/robocode/src/main/frontend/src/app/robocode/editor/editor.component.html","C:/Users/zeqing/git/robocode/src/main/frontend/src/app/robocode/editor/editor.component.ts","C:/Users/zeqing/git/robocode/src/main/frontend/src/app/robocode/editor/legacy-robot/legacy-robot.component.css","C:/Users/zeqing/git/robocode/src/main/frontend/src/app/robocode/editor/legacy-robot/legacy-robot.component.html","C:/Users/zeqing/git/robocode/src/main/frontend/src/app/robocode/editor/legacy-robot/legacy-robot.component.ts","C:/Users/zeqing/git/robocode/src/main/frontend/src/app/robocode/editor/new-robot/new-robot.component.css","C:/Users/zeqing/git/robocode/src/main/frontend/src/app/robocode/editor/new-robot/new-robot.component.html","C:/Users/zeqing/git/robocode/src/main/frontend/src/app/robocode/editor/new-robot/new-robot.component.ts","C:/Users/zeqing/git/robocode/src/main/frontend/src/app/robocode/robocode.component.css","C:/Users/zeqing/git/robocode/src/main/frontend/src/app/robocode/robocode.component.html","C:/Users/zeqing/git/robocode/src/main/frontend/src/app/robocode/robocode.component.ts","C:/Users/zeqing/git/robocode/src/main/frontend/src/app/robocode/robocode.module.ts","C:/Users/zeqing/git/robocode/src/main/frontend/src/app/robocode/robocode.service.ts","C:/Users/zeqing/git/robocode/src/main/frontend/src/app/robocode/robot.model.ts","C:/Users/zeqing/git/robocode/src/main/frontend/src/app/utils/StringUtil.ts","C:/Users/zeqing/git/robocode/src/main/frontend/src/environments/environment.ts","C:/Users/zeqing/git/robocode/src/main/frontend/src/main.ts"],"names":[],"mappings":"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","file":"main.bundle.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncatched exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"../../../../../src/$$_gendir lazy recursive\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/zeqing/git/robocode/src/main/frontend/src/$$_gendir lazy\n// module id = ../../../../../src/$$_gendir lazy recursive\n// module chunks = main","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport {RouterModule, Routes} from \"@angular/router\";\nimport {RobocodeComponent} from \"./robocode/robocode.component\";\nimport {PageNotFoundComponent} from \"./page-not-found/page-not-found.component\";\nimport {BattleComponent} from \"./robocode/battle/battle.component\";\nimport {EditorComponent} from \"./robocode/editor/editor.component\";\nimport {CreateComponent} from \"./robocode/create/create.component\";\nimport {NewRobotComponent} from \"./robocode/editor/new-robot/new-robot.component\";\nimport {LegacyRobotComponent} from \"./robocode/editor/legacy-robot/legacy-robot.component\";\n\n\nconst appRoutes: Routes = [\n  { path: 'robocode', component: RobocodeComponent },\n  { path: 'robocode/create', component: CreateComponent },\n  { path: 'robocode/edit', component: EditorComponent },\n  { path: 'robocode/edit/:id', component: LegacyRobotComponent },\n  { path: 'robocode/edit/new/:package/:robotName', component: NewRobotComponent },\n  { path: 'robocode/battle', component: BattleComponent },\n  { path: 'page-not-found', component: PageNotFoundComponent },\n  { path: '',   redirectTo: '/', pathMatch: 'full' },\n  { path: '**', redirectTo: 'page-not-found'}\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    RouterModule.forRoot(\n      appRoutes,\n      { enableTracing: true}\n    )\n  ],\n  exports: [\n    RouterModule\n  ]\n})\nexport class AppRoutingModule { }\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/zeqing/git/robocode/src/main/frontend/src/app/app-routing.module.ts","exports = module.exports = require(\"../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/zeqing/git/robocode/src/main/frontend/src/app/app.component.css\n// module id = ../../../../../src/app/app.component.css\n// module chunks = main","module.exports = \"<!--The content below is only a placeholder and can be replaced.-->\\n<div style=\\\"text-align:center\\\">\\n  <h1>\\n    Welcome to {{title}}!\\n  </h1>\\n</div>\\n\\n<ul>\\n  <li><a routerLink=\\\"/robocode\\\">Robocode Home</a></li>\\n  <li><a routerLink=\\\"/robocode/create\\\">Create Robot</a></li>\\n  <li><a routerLink=\\\"/robocode/edit\\\">Robot Editor</a></li>\\n  <li><a routerLink=\\\"/robocode/battle\\\">Play Battle</a></li>\\n</ul>\\n\\n<router-outlet></router-outlet>\\n\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/zeqing/git/robocode/src/main/frontend/src/app/app.component.html\n// module id = ../../../../../src/app/app.component.html\n// module chunks = main","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'Robocode';\n}\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/zeqing/git/robocode/src/main/frontend/src/app/app.component.ts","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppComponent } from './app.component';\nimport { PageNotFoundComponent } from './page-not-found/page-not-found.component';\nimport { AppRoutingModule} from \"./app-routing.module\";\nimport { RobocodeModule} from \"./robocode/robocode.module\";\nimport { FormsModule} from \"@angular/forms\";\nimport { HttpModule} from \"@angular/http\";\nimport { RouterModule} from \"@angular/router\";\nimport {RobocodeService} from \"./robocode/robocode.service\";\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    PageNotFoundComponent\n  ],\n  imports: [\n    FormsModule,\n    BrowserModule,\n    RouterModule,\n    HttpModule,\n    AppRoutingModule,\n    RobocodeModule\n  ],\n  providers: [RobocodeService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/zeqing/git/robocode/src/main/frontend/src/app/app.module.ts","exports = module.exports = require(\"../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/zeqing/git/robocode/src/main/frontend/src/app/page-not-found/page-not-found.component.css\n// module id = ../../../../../src/app/page-not-found/page-not-found.component.css\n// module chunks = main","module.exports = \"<p>\\n  page-not-found works!\\n</p>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/zeqing/git/robocode/src/main/frontend/src/app/page-not-found/page-not-found.component.html\n// module id = ../../../../../src/app/page-not-found/page-not-found.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-page-not-found',\n  templateUrl: './page-not-found.component.html',\n  styleUrls: ['./page-not-found.component.css']\n})\nexport class PageNotFoundComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/zeqing/git/robocode/src/main/frontend/src/app/page-not-found/page-not-found.component.ts","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/zeqing/git/robocode/src/main/frontend/src/app/robocode/battle/battle.component.css\n// module id = ../../../../../src/app/robocode/battle/battle.component.css\n// module chunks = main","module.exports = \"<div id=\\\"battle-panel\\\" class=\\\"container\\\">\\n  <!-- Robots Selection Tab -->\\n  <div class=\\\"row\\\">\\n    <div id=\\\"lineup\\\">\\n      <div>\\n        <h1>Robots</h1>\\n        <hr>\\n      </div>\\n      <div class=\\\"form-group\\\">\\n        <div class=\\\"input-group\\\">\\n          <br>\\n          <table>\\n            <tr>\\n              <!-- User Options -->\\n              <td width=\\\"250px\\\">\\n                <label>User</label>\\n                <select class=\\\"form-control\\\" multiple name=\\\"domain_name\\\" id=\\\"domain_name\\\"\\n                        [(ngModel)]=\\\"selectedUsers\\\"\\n                        (ngModelChange)=\\\"userChanges($event)\\\">\\n                  <option *ngFor=\\\"let user of userOptions\\\" [value]=\\\"user\\\">{{user}}</option>\\n                </select>\\n              </td>\\n\\n              <!-- Package Options -->\\n              <td width=\\\"250px\\\">\\n                <label>Package</label>\\n                <select class=\\\"form-control\\\" multiple name=\\\"package\\\" id=\\\"package\\\"\\n                        [(ngModel)]=\\\"selectedPackage\\\"\\n                        (ngModelChange)=\\\"packageChange($event)\\\">\\n                  <option *ngFor=\\\"let package of packageOptions\\\" [value]=\\\"package\\\">{{package}}</option>\\n                </select>\\n              </td>\\n\\n\\n              <!-- Robot Options -->\\n              <td width=\\\"250px\\\">\\n                <label>Robots</label>\\n                <select class=\\\"form-control\\\" multiple name=\\\"displayed-robots\\\"\\n                        [(ngModel)]=\\\"selectedRobots\\\">\\n                  <option *ngFor=\\\"let r of robotOptions\\\" [ngValue]=\\\"r\\\">{{r.robotId}}</option>\\n                </select>\\n\\n              </td>\\n              <td width=\\\"100px\\\" align=\\\"center\\\">\\n                <button type=\\\"button\\\" (click)=\\\"addToChosen()\\\">Add</button>\\n              </td>\\n              <td width=\\\"250px\\\">\\n                <label>Selected Robots</label>\\n                <select class=\\\"form-control\\\" multiple name=\\\"selected-robots\\\"\\n                        (ngModelChange)=\\\"selectedRobotsChange($event)\\\">\\n                  <option *ngFor=\\\"let r of addedRobots\\\" [ngValue]=\\\"r\\\">{{r.robotId}}</option>\\n                </select>\\n              </td>\\n            </tr>\\n          </table>\\n        </div>\\n      </div>\\n    </div>\\n\\n  </div>\\n\\n\\n  <!-- Battle Properties Option Tab -->\\n  <div class=\\\"row\\\">\\n    <div id=\\\"rules\\\">\\n      <div>\\n        <h1>Rules</h1>\\n        <hr>\\n      </div>\\n\\n      <table>\\n        <tr>\\n          <td>\\n            Number of Rounds: <br> (integer > 0)\\n          </td>\\n          <td>\\n            <input type=\\\"text\\\" name=\\\"numRounds\\\" value=\\\"10\\\">\\n          </td>\\n        </tr>\\n        <tr>\\n          <td width=\\\"200px\\\">Gun Cooling Rate: <br> (>0 and <=0.7)</td>\\n          <td>\\n            <input type=\\\"text\\\" name=\\\"gunCool\\\" id=\\\"gunCool\\\" value=\\\"0.1\\\"></td>\\n        </tr>\\n        <tr>\\n          <td>\\n            Inactivity Time: <br> (integer >= 0)\\n          </td>\\n          <td><input type=\\\"text\\\" name=\\\"inactivity\\\" value=\\\"450\\\"></td>\\n        </tr>\\n        <tr>\\n          <td>\\n            Sentry Border Size: <br> (integer >= 50)\\n          </td>\\n          <td><input type=\\\"text\\\" name=\\\"sentryBorder\\\" id=\\\"sentryBorder\\\" value=\\\"100\\\"></td>\\n        </tr>\\n        <tr>\\n          <td>\\n            Hide Enemy Names:\\n          </td>\\n          <td><input type=\\\"checkbox\\\" name=\\\"enemy\\\" value=\\\"enemy\\\"></td>\\n        </tr>\\n      </table>\\n    </div>\\n  </div>\\n</div>\\n\\n\\n<div class=\\\"container\\\">\\n  <div id=\\\"page-wrapper\\\">\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col-lg-12\\\">\\n        <h1 class=\\\"page-header\\\">\\n          <i class=\\\"fa fa-play\\\"></i>\\n          <button type=\\\"button\\\"\\n                  [disabled]=\\\"addedRobots == null || addedRobots.length == 0\\\"\\n                  name=\\\"battlebutton\\\" id=\\\"battlebutton\\\"\\n                  (click)=\\\"startBattle()\\\">Play Battle\\n          </button>\\n        </h1>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/zeqing/git/robocode/src/main/frontend/src/app/robocode/battle/battle.component.html\n// module id = ../../../../../src/app/robocode/battle/battle.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\nimport {Router} from \"@angular/router\";\nimport {Robot} from \"../robot.model\";\nimport {RobocodeService} from \"../robocode.service\";\nimport * as _ from 'underscore';\n\n@Component({\n  selector: 'app-battle',\n  templateUrl: './battle.component.html',\n  styleUrls: ['./battle.component.css']\n})\nexport class BattleComponent implements OnInit {\n\n  allRobots: Robot[];\n\n  userOptions: string[];\n  selectedUsers: string[];\n\n  packageOptions: string[];\n  selectedPackage: string[];\n\n  robotOptions: Robot[];\n  selectedRobots: Robot[];\n  addedRobots: Robot[];\n\n  constructor(\n    private router: Router,\n    private robocodeService: RobocodeService\n  ) {\n    this.allRobots = [];\n\n    this.userOptions = [];\n    this.selectedUsers =[];\n\n    this.packageOptions = [];\n    this.selectedPackage = [];\n\n    this.robotOptions = [];\n    this.selectedRobots = [];\n    this.addedRobots = [];\n  }\n\n  ngOnInit() {\n    this.robocodeService.getAllRobots().subscribe(data => {\n      this.allRobots = data;\n\n      let userOptionsUnique = [];\n      this.allRobots.forEach(robot => {\n        userOptionsUnique.push(robot.userId);\n      });\n      userOptionsUnique = _.uniq(userOptionsUnique);\n      this.userOptions = userOptionsUnique;\n    })\n  }\n\n  userChanges(newUsers) {\n    console.log(newUsers);\n\n    let packageOptionsRaw = [];\n    this.allRobots.forEach(robot => {\n      if (newUsers.indexOf(robot.userId) > -1) {\n        packageOptionsRaw.push(robot.packageId);\n      }\n    });\n\n    let packageOptionsUnique = _.uniq(packageOptionsRaw);\n    this.packageOptions = packageOptionsUnique;\n\n  }\n\n  packageChange(newObj) {\n    console.log(newObj);\n\n    this.robotOptions = _.filter(this.allRobots, (r) => {\n      if (this.selectedUsers.indexOf(r.userId) > -1 && this.selectedPackage.indexOf(r.packageId) > -1) {\n        return true;\n      } else {\n        return false;\n      }\n    })\n  }\n\n  selectedRobotsChange(newSelectedRobots) {\n    console.log(\"Selected Robots Changed\");\n    console.log(newSelectedRobots)\n  }\n\n  startBattle() {\n    let idList: number[] = [];\n    this.addedRobots.forEach(robot => idList.push(robot.id) );\n    this.robocodeService.playBattle(this.addedRobots).subscribe(res => {\n      console.log(res);\n      window.location.href = res.redirectUrl;\n    });\n    // 1. Read Robots From Database\n    // 2. Read Compiled Code / If not yet compiled, discard and notify\n    // 3. Package them into jar\n  }\n\n  /**\n   * Add robot to final selection\n   */\n  addToChosen() {\n    this.addedRobots = this.addedRobots.concat(this.selectedRobots);\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/zeqing/git/robocode/src/main/frontend/src/app/robocode/battle/battle.component.ts","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/zeqing/git/robocode/src/main/frontend/src/app/robocode/create/create.component.css\n// module id = ../../../../../src/app/robocode/create/create.component.css\n// module chunks = main","module.exports = \"<div class=\\\"container\\\">\\n\\n\\n  <h2>New Robot</h2>\\n\\n  <form #robotForm=\\\"ngForm\\\" (ngSubmit)=\\\"onSubmit()\\\">\\n    <div class=\\\"form-group\\\">\\n      <label for=\\\"user-name\\\">Select User</label>\\n      <select class=\\\"form-control\\\" id=\\\"user-name\\\" name=\\\"user-name\\\"\\n              #selectUserElem\\n              required\\n              [(ngModel)]=\\\"userName\\\"\\n              (change)=\\\"onSelectUser(selectUserElem.value)\\\">\\n        <option value=\\\"\\\">Select User</option>\\n        <option *ngFor=\\\"let user of users\\\" [value]=\\\"user\\\">{{user}}</option>\\n      </select>\\n    </div>\\n\\n\\n    <div class=\\\"form-group\\\">\\n      <label for=\\\"package-name\\\">Select Package</label>\\n      <select class=\\\"form-control\\\" id=\\\"package-name\\\" name=\\\"package-name\\\"\\n              required\\n              #selectPackageElem\\n              [(ngModel)]=\\\"packageName\\\">\\n        <option value=\\\"\\\">Select Package</option>\\n        <option *ngFor=\\\"let package of packages\\\" [value]=\\\"package\\\">{{package}}</option>\\n      </select>\\n    </div>\\n\\n\\n    <div class=\\\"form-group\\\">\\n      <p>Enter Robot Name</p>\\n      <p>Example: MyFirstRobot. Must not contain spaces.</p>\\n      <label>Robot Name</label>\\n      <input class=\\\"form-control\\\" type=\\\"text\\\"\\n             name=\\\"robot_name\\\" placeholder=\\\"Please enter a robot name\\\"\\n             required\\n             [(ngModel)]=\\\"robotName\\\">\\n    </div>\\n\\n    <div class=\\\"form-group\\\">\\n      <button class=\\\"btn btn-success\\\" type=\\\"submit\\\" [disabled]=\\\"!robotForm.form.valid\\\">Next</button>\\n    </div>\\n\\n  </form>\\n\\n</div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/zeqing/git/robocode/src/main/frontend/src/app/robocode/create/create.component.html\n// module id = ../../../../../src/app/robocode/create/create.component.html\n// module chunks = main","import {Component, OnInit, ViewEncapsulation} from '@angular/core';\nimport 'codemirror/mode/clike/clike';\nimport {RobocodeService} from \"../robocode.service\";\nimport { Router} from \"@angular/router\";\nimport 'rxjs/add/operator/switchMap';\nimport {Domain, RobotViewModel} from \"../robot.model\";\nimport * as _ from 'underscore';\n\n@Component({\n  selector: 'app-create',\n  templateUrl: './create.component.html',\n  styleUrls: ['./create.component.css']\n})\nexport class CreateComponent implements OnInit {\n\n\n  users: string[];\n  packages: string[];\n  robotName: string;\n\n  userName: string;\n  packageName: string;\n\n  viewModel: RobotViewModel;\n\n  domainMap: {};\n\n\n  constructor(\n    private robocodeService: RobocodeService,\n    private router: Router) { }\n\n  ngOnInit() {\n\n\n    this.robocodeService.getRobotDomainInfo().subscribe(data => {\n      this.viewModel = new RobotViewModel();\n      this.viewModel.domains = [];\n\n      this.domainMap = {};\n      data.forEach(value => {\n        let userId = value.userID;\n        let packageId: string = value.packageID;\n        if (this.domainMap[userId] != null) {\n          this.domainMap[userId].packages.push(packageId);\n        } else {\n          this.domainMap[userId] = {};\n          this.domainMap[userId].name = userId;\n          this.domainMap[userId].packages = [packageId];\n        }\n      });\n\n      this.viewModel.domains = [];\n      this.users = [];\n      Object.keys(this.domainMap).forEach(key => {\n        this.domainMap[key].packages = _.uniq(this.domainMap[key].packages);\n        let domain = new Domain(this.domainMap[key].name, this.domainMap[key].packages);\n        this.viewModel.domains.push(domain);\n        this.users.push(this.domainMap[key].name);\n      });\n    });\n  }\n\n  /**\n   *\n   * @param {String} value\n   */\n  onSelectUser(value: string) {\n    this.packages = this.domainMap[value].packages;\n  }\n\n  onSubmit() {\n    this.router.navigate([\"robocode/edit/new\", this.packageName, this.robotName]);\n  }\n}\n\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/zeqing/git/robocode/src/main/frontend/src/app/robocode/create/create.component.ts","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".CodeMirror  {\\r\\n  border: 1px solid #eee !important;\\r\\n  height: 100% !important;\\r\\n}\\r\\n\\r\\n\\r\\n\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/zeqing/git/robocode/src/main/frontend/src/app/robocode/editor/editor.component.css\n// module id = ../../../../../src/app/robocode/editor/editor.component.css\n// module chunks = main","module.exports = \"<div class=\\\"container\\\">\\n\\n  <h2>View and Edit Robot</h2>\\n\\n  <form #robotForm=\\\"ngForm\\\" (ngSubmit)=\\\"onSubmit()\\\">\\n    <div class=\\\"form-group\\\">\\n      <label for=\\\"user-name\\\">Select User</label>\\n      <select class=\\\"form-control\\\" id=\\\"user-name\\\" name=\\\"user-name\\\"\\n              required\\n              [(ngModel)]=\\\"selectedUsers\\\"\\n              (ngModelChange)=\\\"userChanges($event)\\\">\\n        <option value=\\\"\\\">Select User</option>\\n        <option *ngFor=\\\"let user of userOptions\\\" [value]=\\\"user\\\">{{user}}</option>\\n      </select>\\n    </div>\\n\\n\\n    <div class=\\\"form-group\\\">\\n      <label for=\\\"package-name\\\">Select Package</label>\\n      <select class=\\\"form-control\\\" id=\\\"package-name\\\" name=\\\"package-name\\\"\\n              required\\n              [(ngModel)]=\\\"selectedPackage\\\"\\n              (ngModelChange)=\\\"packageChange($event)\\\">\\n        <option value=\\\"\\\">Select Package</option>\\n        <option *ngFor=\\\"let package of packageOptions\\\" [value]=\\\"package\\\">{{package}}</option>\\n      </select>\\n    </div>\\n\\n    <div class=\\\"form-group\\\">\\n      <label for=\\\"package-name\\\">Select Package</label>\\n      <select class=\\\"form-control\\\" id=\\\"robot-name\\\" name=\\\"robot-name\\\"\\n              required\\n              [(ngModel)]=\\\"selectedRobots\\\"\\n              (ngModelChange)=\\\"robotChange($event)\\\">\\n        <option [value]=\\\"null\\\">Select Package</option>\\n        <option *ngFor=\\\"let r of robotOptions\\\" [ngValue]=\\\"r\\\" >{{r.robotId}}</option>\\n\\n      </select>\\n    </div>\\n\\n    <div class=\\\"form-group\\\">\\n      <button class=\\\"btn btn-success\\\" type=\\\"submit\\\" [disabled]=\\\"!robotForm.form.valid\\\">Next</button>\\n    </div>\\n\\n  </form>\\n\\n</div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/zeqing/git/robocode/src/main/frontend/src/app/robocode/editor/editor.component.html\n// module id = ../../../../../src/app/robocode/editor/editor.component.html\n// module chunks = main","import {Component, OnInit, ViewEncapsulation} from '@angular/core';\nimport {RobocodeService} from \"../robocode.service\";\nimport {Domain, Robot, RobotModel, RobotViewModel, SimpleRobot} from \"../robot.model\";\nimport {ActivatedRoute, ParamMap, Router} from \"@angular/router\";\nimport * as _ from 'underscore';\n\n@Component({\n  selector: 'app-editor',\n  templateUrl: './editor.component.html',\n  styleUrls: ['./editor.component.css'],\n  encapsulation: ViewEncapsulation.None,\n})\nexport class EditorComponent implements OnInit {\n\n  allRobots: Robot[];\n\n  userOptions: string[];\n  selectedUsers: string;\n\n  packageOptions: string[];\n  selectedPackage: string;\n\n  robotOptions: Robot[];\n  selectedRobots: Robot;\n\n\n  constructor(\n    private robocodeService: RobocodeService,\n    private router: Router\n  ) {\n    this.allRobots = [];\n\n\n    this.userOptions = [];\n    this.selectedUsers = \"\";\n\n    this.packageOptions = [];\n    this.selectedPackage = \"\";\n\n    this.robotOptions = [];\n    this.selectedRobots = null;\n  }\n\n  ngOnInit() {\n    this.robocodeService.getAllRobots().subscribe(data => {\n      this.allRobots = data;\n\n      let userOptionsUnique = [];\n      this.allRobots.forEach(robot => {\n        userOptionsUnique.push(robot.userId);\n      });\n      userOptionsUnique = _.uniq(userOptionsUnique);\n      this.userOptions = userOptionsUnique;\n    });\n\n  }\n\n  userChanges(newUsers) {\n    console.log(newUsers);\n\n    let packageOptionsRaw = [];\n    this.allRobots.forEach(robot => {\n      if (newUsers == robot.userId) {\n        packageOptionsRaw.push(robot.packageId);\n      }\n    });\n\n    let packageOptionsUnique = _.uniq(packageOptionsRaw);\n    this.packageOptions = packageOptionsUnique;\n\n  }\n\n  packageChange(newObj) {\n    console.log(newObj);\n\n    this.robotOptions = _.filter(this.allRobots, (r) => {\n      if (this.selectedUsers == r.userId && this.selectedPackage == r.packageId) {\n        return true;\n      } else {\n        return false;\n      }\n    });\n  }\n\n\n  robotChange(newRobot) {\n    console.log(newRobot);\n    console.log(this.robotOptions);\n\n  }\n\n\n\n  onSubmit() {\n\n    this.router.navigate([\"robocode/edit\", this.selectedRobots.id]);\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/zeqing/git/robocode/src/main/frontend/src/app/robocode/editor/editor.component.ts","exports = module.exports = require(\"../../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".CodeMirror  {\\r\\n  border: 1px solid #eee !important;\\r\\n  height: 100% !important;\\r\\n}\\r\\n\\r\\n\\r\\n\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/zeqing/git/robocode/src/main/frontend/src/app/robocode/editor/legacy-robot/legacy-robot.component.css\n// module id = ../../../../../src/app/robocode/editor/legacy-robot/legacy-robot.component.css\n// module chunks = main","module.exports = \"<div class=\\\"container\\\">\\n  <div class=\\\"form-group\\\">\\n    <button type=\\\"button\\\" (click)=\\\"saveRobot()\\\" [disabled]=\\\"isSubmit\\\" >Save Robot</button>\\n  </div>\\n\\n\\n  <div class=\\\"form-group\\\">\\n    <button type=\\\"button\\\" (click)=\\\"compileRobot()\\\" [disabled]=\\\"isSubmit\\\" >Compile Robot</button>\\n  </div>\\n\\n\\n  <div>\\n    <label>{{responseMessage}}</label>\\n  </div>\\n  <div>\\n    <codemirror [(ngModel)]=\\\"content\\\" [config]=\\\"config\\\"></codemirror>\\n  </div>\\n\\n</div>\\n\\n\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/zeqing/git/robocode/src/main/frontend/src/app/robocode/editor/legacy-robot/legacy-robot.component.html\n// module id = ../../../../../src/app/robocode/editor/legacy-robot/legacy-robot.component.html\n// module chunks = main","import {Component, OnInit, ViewEncapsulation} from '@angular/core';\nimport {Robot, RobotModel, SimpleRobot} from \"../../robot.model\";\nimport {RobocodeService} from \"../../robocode.service\";\nimport {ActivatedRoute} from \"@angular/router\";\n\n@Component({\n  selector: 'app-legacy-robot',\n  templateUrl: './legacy-robot.component.html',\n  styleUrls: ['./legacy-robot.component.css'],\n  encapsulation: ViewEncapsulation.None\n})\nexport class LegacyRobotComponent implements OnInit {\n\n  /**\n   * Codemirror Editor setting\n   */\n  config;\n  content;\n\n  robot: Robot;\n\n  id: string;\n  robotId: string;\n\n  responseMessage: string;\n\n  isSubmit: boolean = false;\n\n\n  constructor(\n    private robocodeService: RobocodeService,\n    private route: ActivatedRoute\n  ) { }\n\n  ngOnInit() {\n    this.config = {\n      lineNumbers: true,\n      mode: 'text/x-java',\n      matchBrackets: true,\n      viewportMargin: Infinity\n    };\n\n    // if (this.robot != null) {\n    //   this.content = this.robocodeService.generateRobotStub(this.robot.packageName, this.robot.robotName);\n    // }\n\n\n    this.id = this.route.snapshot.paramMap.get('id');\n\n    this.robocodeService.getRobotById(this.id).subscribe(data => {\n      this.robot = new Robot(data);\n      this.content = this.robot.robotSrcCode;\n    });\n\n\n  }\n\n\n  saveRobot() {\n\n    this.robot.robotSrcCode = this.content;\n    this.responseMessage = \"\";\n    this.robocodeService.saveLegacyRobot(this.robot).subscribe(res => {\n      this.responseMessage = res.response;\n    });\n  }\n\n\n  compileRobot() {\n    this.responseMessage = \"\";\n    this.robocodeService.compileRobot(this.robot).subscribe(res => {\n      this.responseMessage = res.response;\n    });\n\n  }\n\n\n\n}\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/zeqing/git/robocode/src/main/frontend/src/app/robocode/editor/legacy-robot/legacy-robot.component.ts","exports = module.exports = require(\"../../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".CodeMirror  {\\r\\n  border: 1px solid #eee !important;\\r\\n  height: 100% !important;\\r\\n}\\r\\n\\r\\n\\r\\n\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/zeqing/git/robocode/src/main/frontend/src/app/robocode/editor/new-robot/new-robot.component.css\n// module id = ../../../../../src/app/robocode/editor/new-robot/new-robot.component.css\n// module chunks = main","module.exports = \"<div>\\n  <div class=\\\"form-group\\\">\\n    <button type=\\\"button\\\" (click)=\\\"saveRobot()\\\" [disabled]=\\\"isSubmit\\\" >Save Robot</button>\\n  </div>\\n  <div>\\n    <label>{{responseMessage}}</label>\\n  </div>\\n  <div>\\n    <codemirror [(ngModel)]=\\\"content\\\" [config]=\\\"config\\\"></codemirror>\\n  </div>\\n\\n</div>\\n\\n\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/zeqing/git/robocode/src/main/frontend/src/app/robocode/editor/new-robot/new-robot.component.html\n// module id = ../../../../../src/app/robocode/editor/new-robot/new-robot.component.html\n// module chunks = main","import {Component, OnInit, ViewEncapsulation} from '@angular/core';\nimport {RobotModel, SimpleRobot} from \"../../robot.model\";\nimport {RobocodeService} from \"../../robocode.service\";\nimport {ActivatedRoute} from \"@angular/router\";\n\n@Component({\n  selector: 'app-new-robot',\n  templateUrl: './new-robot.component.html',\n  styleUrls: ['./new-robot.component.css'],\n  encapsulation: ViewEncapsulation.None,\n})\nexport class NewRobotComponent implements OnInit {\n\n\n\n  /**\n   * Codemirror Editor setting\n   */\n  config;\n  content;\n\n  robot: RobotModel;\n\n  packageId: string;\n  robotId: string;\n\n  responseMessage: string;\n\n  isSubmit: boolean = false;\n\n\n  constructor(\n    private robocodeService: RobocodeService,\n    private route: ActivatedRoute\n  ) { }\n\n  ngOnInit() {\n    this.config = {\n      lineNumbers: true,\n      mode: 'text/x-java',\n      matchBrackets: true,\n      viewportMargin: Infinity\n    };\n\n    this.robot = this.robocodeService.robot;\n    // if (this.robot != null) {\n    //   this.content = this.robocodeService.generateRobotStub(this.robot.packageName, this.robot.robotName);\n    // }\n\n\n    this.packageId = this.route.snapshot.paramMap.get('package');\n    this.robotId = this.route.snapshot.paramMap.get('robotName');\n\n    this.content = this.robocodeService.generateRobotStub(this.packageId, this.robotId);\n  }\n\n\n  saveRobot() {\n    this.isSubmit = true;\n\n    let newRobot = new SimpleRobot();\n    newRobot.packageId = this.packageId;\n    newRobot.access = 'Y';\n    newRobot.robotId = this.robotId;\n    newRobot.robotSrcCode = this.content;\n\n    this.robocodeService.saveNewRobot(newRobot).subscribe(res => {\n      this.responseMessage = res.response;\n    });\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/zeqing/git/robocode/src/main/frontend/src/app/robocode/editor/new-robot/new-robot.component.ts","exports = module.exports = require(\"../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/zeqing/git/robocode/src/main/frontend/src/app/robocode/robocode.component.css\n// module id = ../../../../../src/app/robocode/robocode.component.css\n// module chunks = main","module.exports = \"<footer class=\\\"text-center\\\">\\n  <div class=\\\"footer-above\\\">\\n    <div class=\\\"container\\\">\\n      <div class=\\\"row\\\">\\n        <!--  <div class=\\\"footer-col col-md-4\\\">-->\\n        <h3>About Robocode</h3>\\n        <p>\\n          Robocode is a programming game where the goal is to code a robot\\n          battle tank to compete against other robots in a battle arena. So\\n          the name Robocode is a short for \\\"Robot code\\\". The player is the\\n          programmer of the robot, who will have no direct influence on the\\n          game. Instead, the player must write the AI of the robot telling\\n          it how to behave and react on events occurring in the battle\\n          arena. Battles are running in real-time and on-screen.\\n        </p>\\n        <!--  </div> -->\\n      </div>\\n    </div>\\n  </div>\\n  <div class=\\\"footer-below\\\">\\n    <div class=\\\"container\\\">\\n      <div class=\\\"row\\\">\\n        <div class=\\\"col-lg-12\\\">Copyright &copy; 2016</div>\\n      </div>\\n    </div>\\n  </div>\\n</footer>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/zeqing/git/robocode/src/main/frontend/src/app/robocode/robocode.component.html\n// module id = ../../../../../src/app/robocode/robocode.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-robocode',\n  templateUrl: './robocode.component.html',\n  styleUrls: ['./robocode.component.css']\n})\nexport class RobocodeComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/zeqing/git/robocode/src/main/frontend/src/app/robocode/robocode.component.ts","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { CreateComponent } from './create/create.component';\nimport { EditorComponent } from './editor/editor.component';\nimport { BattleComponent } from './battle/battle.component';\nimport { RobocodeComponent} from \"./robocode.component\";\nimport { FormsModule} from \"@angular/forms\";\nimport { CodemirrorModule} from \"ng2-codemirror\";\nimport { NewRobotComponent } from './editor/new-robot/new-robot.component';\nimport { LegacyRobotComponent } from './editor/legacy-robot/legacy-robot.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    CodemirrorModule\n  ],\n  declarations: [\n    RobocodeComponent,\n    CreateComponent,\n    EditorComponent,\n    BattleComponent,\n    NewRobotComponent,\n    LegacyRobotComponent\n  ]\n})\nexport class RobocodeModule { }\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/zeqing/git/robocode/src/main/frontend/src/app/robocode/robocode.module.ts","import { Injectable} from \"@angular/core\";\r\nimport { Http} from \"@angular/http\";\r\nimport { Observable} from \"rxjs/Observable\";\r\nimport 'rxjs/add/operator/map';\r\nimport {Robot, RobotModel, SimpleRobot} from \"./robot.model\";\r\nimport {capitalize} from \"../utils/StringUtil\";\r\n\r\n@Injectable()\r\nexport class RobocodeService {\r\n\r\n  private _robot: RobotModel;\r\n\r\n  get robot(): RobotModel{\r\n    return this._robot;\r\n  }\r\n\r\n  set robot(robot: RobotModel) {\r\n    this._robot = robot;\r\n  }\r\n\r\n  private baseUrl: string = \"api/v1/robocode/\";\r\n\r\n  constructor(private http: Http){}\r\n\r\n  getUsers(): Observable<any> {\r\n    return this.http.get(this.baseUrl + 'users')\r\n      .map(res => res.json());\r\n\r\n  }\r\n\r\n  getRobotDomainInfo(): Observable<any> {\r\n    return this.http.get(this.baseUrl + 'domain-info')\r\n      .map(res => res.json());\r\n  }\r\n\r\n  saveNewRobot(newRobot: SimpleRobot): Observable<any> {\r\n    return this.http.post(this.baseUrl + 'robot/new/save', newRobot)\r\n      .map(res => res.json());\r\n  }\r\n\r\n  saveLegacyRobot(robot: Robot): Observable<any> {\r\n    return this.http.post(this.baseUrl + 'robot/save', robot)\r\n      .map(res => res.json());\r\n  }\r\n\r\n  getRobotById(id): Observable<any> {\r\n    return this.http.get(this.baseUrl + 'robot/' + id)\r\n      .map(res => res.json());\r\n  }\r\n\r\n  getAllRobots(): Observable<any> {\r\n    return this.http.get(this.baseUrl + 'robots/all')\r\n      .map(res => res.json());\r\n  }\r\n\r\n\r\n  playBattle(robotList: Robot[]) :Observable<any> {\r\n    return this.http.post(this.baseUrl + 'battle/init', robotList)\r\n      .map(res => res.json())\r\n  }\r\n\r\n\r\n  compileRobot(robot: Robot): Observable<any> {\r\n    return this.http.get(this.baseUrl + 'robot/' + robot.id + \"/compile\")\r\n      .map(res => res.json());\r\n  }\r\n\r\n  generateRobotStub(packageName: string, robotName: string){\r\n    robotName = capitalize(robotName);\r\n    return `\r\npackage ${packageName};\r\n\r\nimport robocode.*;\r\nimport robocode.HitByBulletEvent;\r\nimport robocode.Robot;\r\nimport robocode.ScannedRobotEvent;\r\n//import java.awt.Color;\r\n\r\n// API help: http://robocode.sourceforge.net/docs/robocode/robocode/Robot.html\r\n\r\n/**\r\n * ${robotName}- a robot by User\r\n */\r\npublic class ${robotName} extends Robot{\r\n\t/**\r\n\t * run: ${robotName} default behavior\r\n\t */\r\n\tpublic void run() {\r\n\t// Initialization of the robot should be put here\r\n\r\n\t// After trying out your robot, try uncommenting the import at the top,\r\n\t// and the next line:\r\n\r\n\t// setColors(Color.red,Color.blue,Color.green); // body,gun,radar\r\n\r\n\t// Robot main loop\r\n\t\twhile(true) {\r\n\t\t\t// Replace the next 4 lines with any behavior you would like\r\n\t\t\tahead(100);\r\n\t\t\tturnGunRight(360);\r\n\t\t\tback(100);\r\n\t\t\tturnGunRight(360);\r\n\t\t}\r\n\t}\r\n\t/**\r\n\t * onScannedRobot: What to do when you see another robot\r\n\t */\r\n\tpublic void onScannedRobot(ScannedRobotEvent e) {\r\n\t\t// Replace the next line with any behavior you would like\r\n\t\tfire(1);\r\n\t}\r\n\r\n\t/**\r\n\t * onHitByBullet: What to do when you're hit by a bullet\r\n\t */\r\n\tpublic void onHitByBullet(HitByBulletEvent e) {\r\n\t\t// Replace the next line with any behavior you would like\r\n\t\tback(10);\r\n\t}\r\n\t\r\n\t/**\r\n\t * onHitWall: What to do when you hit a wall\r\n\t */\r\n\tpublic void onHitWall(HitWallEvent e) {\r\n\t\t// Replace the next line with any behavior you would like\r\n\t\tback(20);\r\n\t}\t\r\n}\r\n     `\r\n\r\n  }\r\n\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/zeqing/git/robocode/src/main/frontend/src/app/robocode/robocode.service.ts","export class RobotModel {\r\n  packageName: string;\r\n  robotName: string;\r\n\r\n  constructor(packageName, robotName) {\r\n    this.packageName = packageName;\r\n    this.robotName = robotName;\r\n  }\r\n}\r\n\r\n\r\nexport class RobotViewModel {\r\n  domains: Domain[];\r\n\r\n}\r\n\r\nexport class Domain {\r\n  name: string;\r\n  packages: string[];\r\n\r\n  constructor(name, packages) {\r\n    this.name = name;\r\n    this.packages = packages;\r\n  }\r\n}\r\n\r\n\r\nexport class SimpleRobot {\r\n  packageId;\r\n  robotId;\r\n  access;\r\n  robotSrcCode;\r\n}\r\n\r\nexport class Robot {\r\n  id;\r\n  userId;\r\n  packageId;\r\n  robotId;\r\n  access;\r\n  filePath;\r\n  createdDate;\r\n  updatedDate;\r\n  robotSrcCode;\r\n\r\n  constructor(param) {\r\n    this.id = param.id;\r\n    this.userId = param.userId;\r\n    this.packageId = param.packageId;\r\n    this.robotId = param.robotId;\r\n    this.access = param.access;\r\n    this.filePath = param.filePath;\r\n    this.createdDate = param.createdDate;\r\n    this.updatedDate = param.updatedDate;\r\n    this.robotSrcCode = param.robotSrcCode;\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/zeqing/git/robocode/src/main/frontend/src/app/robocode/robot.model.ts","export const capitalize = function(str){\r\n  return str.charAt(0).toUpperCase() + str.slice(1);\r\n};\r\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/zeqing/git/robocode/src/main/frontend/src/app/utils/StringUtil.ts","// The file contents for the current environment will overwrite these during build.\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\n// The list of which env maps to which file can be found in `.angular-cli.json`.\n\nexport const environment = {\n  production: false\n};\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/zeqing/git/robocode/src/main/frontend/src/environments/environment.ts","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/zeqing/git/robocode/src/main/frontend/src/main.ts"],"sourceRoot":"webpack:///"}